version: '3.9'

services:
  cadvisor:

    image: gcr.io/cadvisor/cadvisor:latest
    #network_mode: "host"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - '8080:8080'
    depends_on:
      - prometheus
  node-exporter:
    image: prom/node-exporter:latest
    #network_mode: "host"
    ports:
      - "9100:9100"
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  loki:
    image: grafana/loki:latest
    #network_mode: "host"
    ports:
      - "3100:3100"
    volumes:
      # - loki-data:/loki
      - ./grafprov/alerting/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    # networks:
    #   - monitoring
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -q --try-connect-timeout=1 -O - http://localhost:3100/ready || exit 1"]
      # interval: 10s
      # timeout: 5s
      # retries: 5


  promtail:
    image: grafana/promtail:latest     #2.9.0
    #network_mode: "host"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yml
    # depends_on:
    #   loki:
    #     condition: service_healthy
    # networks:
      # - monitoring

  prometheus:
    image: prom/prometheus:latest
    #network_mode: "host"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    command: 
      # - '--config.file=/etc/prometheus/prometheus.yml'
      # - '--web.enable-lifecycle'
      # - '--storage.path=/alertmanager'

      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: always    
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:latest
    #network_mode: "host"
    container_name: grafana
    depends_on:
      - prometheus
      - alertmanager
      - node-exporter
      - loki
          # condition: service_healthy

    environment: 
       - GF_SECURITY_ADMIN_USER=admin
       - GF_SECURITY_ADMIN_PASSWORD=grafana_password
       - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafprov/alerting:/etc/grafana/provisioning
      # - ./grafprov/alerting/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafprov/datasources/grafana-datasource-config.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      # - ./grafprov/alerting/rules.yaml:/etc/grafana/provisioning/alerting/rules.yaml
      # - ./grafprov/alerting/alert_resources.yaml:/etc/grafana/provisioning/alerting/alert_resources.yaml
    ports:
      - "3000:3000"
  # stress:
  #   image: mohsenmottaghi/container-stress
  #   command: stress --verbose --vm 1 --vm-bytes 512M
  alertmanager:
    image: prom/alertmanager:latest
    #network_mode: "host"
    ports:
      - '9093:9093'
    volumes:
      - ./grafprov/alerting:/etc/alertmanager
      - alertmanager-data:/data
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yaml'
    restart: always
  # stress:
  #   image: polinux/stress
  #   command: stress --verbose --vm 6 --vm-bytes 512M
volumes:
  # loki-data:
  grafana_data:
  prometheus_data:
  alertmanager-data:
networks:
  default:
    # external:
    #   name: grafana_default
  grafana_default:
    driver: bridge